<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fighter_menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>status = 'ready'
image_speed = 0.25
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.status_menu == 'ready'
{
    if status == 'ready' &amp;&amp; global.p1 != noone
    {
        switch global.p1.image_index
        {
            case 0:
            {
                sprite_index = spr_fighter_purple_menu;
                break;
            }
            case 1:
            {
                sprite_index = spr_fighter_blue_menu;
                break;
            }
            case 2:
            {
                sprite_index = spr_fighter_aqua_menu;
                break;
            }
            case 3:
            {
                sprite_index = spr_fighter_green_menu;
                break;
            }
            case 4:
            {
                sprite_index = spr_fighter_yellow_menu;
                break;
            }
            case 5:
            {
                sprite_index = spr_fighter_red_menu;
                break;
            }
            case 6:
            {
                sprite_index = spr_fighter_darkpurple_menu;
                break;
            }
            case 7:
            {
                sprite_index = spr_fighter_darkblue_menu;
                break;
            }
            case 8:
            {
                sprite_index = spr_fighter_darkaqua_menu;
                break;
            }
            case 9:
            {
                sprite_index = spr_fighter_darkgreen_menu;
                break;
            }
            case 10:
            {
                sprite_index = spr_fighter_darkred_menu;
                break;
            }
            case 11:
            {
                sprite_index = spr_fighter_white_menu;
                break;
            }
            default: 
            {
                sprite_index = spr_fighter_menu;
                break;
            }
        }
    }
    else
    {
        if status == 'come'
        {
            sprite_index = spr_fighter_come_menu;    
        }
        if status == 'out'
        {
            sprite_index = spr_fighter_out_menu;    
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if status != 'ready'
{
    if status == 'out'
    {
        status = 'come'
    }
    else
    {
        status = 'ready'   
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>98,131</point>
    <point>131,131</point>
  </PhysicsShapePoints>
</object>
