<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///joy
x = view_xview[0]+160
y = view_yview[0]+80

button_up = instance_create(x-64,y-32,o_button_game);
button_down = instance_create(x-64,y+32,o_button_game);
button_left = instance_create(x-96,y,o_button_game);
button_right = instance_create(x-32,y,o_button_game);

button_a = instance_create(x+64,y+32,o_button_game);
button_b = instance_create(x+96,y,o_button_game);
button_x = instance_create(x+32,y,o_button_game);
button_y = instance_create(x+64,y-32,o_button_game);

button_up.sprite_index = spr_button_up_game;
button_down.sprite_index = spr_button_down_game;
button_left.sprite_index = spr_button_left_game;
button_right.sprite_index = spr_button_right_game;
button_a.sprite_index = spr_button_a_game;
button_b.sprite_index = spr_button_b_game;
button_x.sprite_index = spr_button_x_game;
button_y.sprite_index = spr_button_y_game;



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///combo

combo_1 = instance_create(x-96,y+96,o_combo_list_game);
combo_2 = instance_create(x-64,y+96,o_combo_list_game);
combo_3 = instance_create(x-32,y+96,o_combo_list_game);
combo_4 = instance_create(x,y+96,o_combo_list_game);




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pos
x = view_xview[0]+160
y = view_yview[0]+80

button_up.x = x-64;
button_up.y = y-32;
button_down.x = x-64;
button_down.y = y+32;
button_left.x = x-96;
button_left.y = y;
button_right.x = x-32;
button_right.y = y;
button_a.x = x+64;
button_a.y = y+32;
button_b.x = x+96;
button_b.y = y;
button_x.x = x+32;
button_x.y = y;
button_y.x = x+64;
button_y.y = y-32;

combo_1.x = x-96;
combo_1.y = y+96;
combo_2.x = x-64;
combo_2.y = y+96;
combo_3.x = x-32;
combo_3.y = y+96;
combo_4.x = x;
combo_4.y = y+96;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///keyboard
if keyboard_check(vk_up)
{
    button_up.image_index = 1
}
else
{
    button_up.image_index = 0
}
//******************************
if keyboard_check(vk_down)
{
    button_down.image_index = 1  
}
else
{
    button_down.image_index = 0
}
//******************************
if keyboard_check(vk_left)
{
    button_left.image_index = 1   
}
else
{
    button_left.image_index = 0
}
//******************************
if keyboard_check(vk_right)
{
    button_right.image_index = 1   
}
else
{
    button_right.image_index = 0
}
//******************************

if keyboard_check(ord('A'))
{
    button_x.image_index = 1   
}
else
{
    button_x.image_index = 0
}
//******************************
if keyboard_check(ord('S'))
{
    button_y.image_index = 1   
}
else
{
    button_y.image_index = 0
}
//******************************
if keyboard_check(ord('X'))
{
    button_b.image_index = 1   
}
else
{
    button_b.image_index = 0
}
//******************************
if keyboard_check(ord('Z'))
{
    button_a.image_index = 1   
}
else
{
    button_a.image_index = 0
}
//******************************
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///combo
if keyboard_check_pressed(vk_up)
{
    combo_1.input = combo_2.input
    combo_2.input = combo_3.input
    combo_3.input = combo_4.input
    combo_4.input = 'up'
}
if keyboard_check_pressed(vk_down)
{
    combo_1.input = combo_2.input
    combo_2.input = combo_3.input
    combo_3.input = combo_4.input
    combo_4.input = 'down'
}
if keyboard_check_pressed(vk_left)
{
    combo_1.input = combo_2.input
    combo_2.input = combo_3.input
    combo_3.input = combo_4.input
    combo_4.input = 'left'
}
if keyboard_check_pressed(vk_right)
{
    combo_1.input = combo_2.input
    combo_2.input = combo_3.input
    combo_3.input = combo_4.input
    combo_4.input = 'right'
}
if keyboard_check_pressed(ord('A'))
{
    combo_1.input = combo_2.input
    combo_2.input = combo_3.input
    combo_3.input = combo_4.input
    combo_4.input = 'x'
}
if keyboard_check_pressed(ord('S'))
{
    combo_1.input = combo_2.input
    combo_2.input = combo_3.input
    combo_3.input = combo_4.input
    combo_4.input = 'y'
}
if keyboard_check_pressed(ord('X'))
{
    combo_1.input = combo_2.input
    combo_2.input = combo_3.input
    combo_3.input = combo_4.input
    combo_4.input = 'b'
}
if keyboard_check_pressed(ord('Z'))
{
    combo_1.input = combo_2.input
    combo_2.input = combo_3.input
    combo_3.input = combo_4.input
    combo_4.input = 'a'
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
